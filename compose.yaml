services:
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports: ["11434:11434"]
    volumes:
      - ollama_models:/root/.ollama
    networks: [rag-net]

    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 5s
      timeout: 3s
      retries: 20

    restart: unless-stopped

  rag-app:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: rag-app

    depends_on:
      ollama:
        condition: service_healthy

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/ping"]
      interval: 5s
      timeout: 3s
      retries: 20

    volumes:
      - ./app:/app/app        # ðŸ‘ˆ live mount source code
      - chroma_persist:/app/data/chroma_persist
      - ./data/persist:/app/data/persist
      - ./offline_llm_models/cross_encoder:/app/models/cross_encoder:ro

    ports: ["8000:8000"]  

    environment:
      - OLLAMA_HOST=http://ollama:11434
      - CORS_ALLOW=http://localhost,http://localhost:5173
      - LANGCHAIN_ENDPOINT=disabled
      - LANGCHAIN_TELEMETRY_ENABLED=false
      - CHROMA_TELEMETRY=FALSE
      - CHUNK_SIZE=800
      - CHUNK_OVERLAP=100
      - RERANK_TOP_K=3
      - PERSIST_CHROMA_DIR=/app/data/chroma_persist

    networks: [rag-net]
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
      args:
        VITE_API_URL: /api
    environment:
      - VITE_API_URL=/api
    container_name: offline-llm-frontend
    ports:
      - "443:443"
      - "80:80"


    depends_on:
      rag-app:
        condition: service_healthy

    volumes:
      - ./certs:/etc/nginx/certs:ro

    networks: [rag-net]
    restart: unless-stopped

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Named volumes & network â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
volumes:
  chroma_persist:
  ollama_models:

networks:
  rag-net:
